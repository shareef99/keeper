{"version":3,"sources":["lib/firebase/config.ts","lib/helpers/context.ts","context/AuthContext.tsx","Home.tsx","components/layout/Footer.tsx","components/layout/Header.tsx","components/layout/Layout.tsx","components/atoms/Buttons.tsx","lib/helpers/notes.ts","context/NoteContext.tsx","components/Notes/CreateNote.tsx","components/Notes/Options.tsx","components/Notes/UpdateNote.tsx","components/Notes/Note.tsx","lib/hooks/notes.ts","keeper/Notes.tsx","App.tsx","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","convertDateToINS","date","Date","toLocaleString","timeZone","year","month","day","hour","minute","second","authContextDefaultValues","user","uid","email","name","imgURL","isNewUser","signInMethod","createdTime","lastSignInTime","login","logout","error","AuthContext","createContext","useAuth","useContext","AuthProvider","children","history","useHistory","useState","setUser","setError","a","provider","auth","GoogleAuthProvider","signInWithPopup","result","additionalUserInfo","userValues","displayName","photoURL","providerId","isAnonymous","metadata","creationTime","collection","doc","set","push","signOut","useEffect","onAuthStateChanged","undefined","value","Provider","Home","props","el","useRef","typed","Typed","current","strings","startDelay","typeSpeed","backSpeed","backDelay","smartBackspace","loop","showCursor","cursorChar","destroy","className","ref","to","onClick","size","Footer","currentYear","getFullYear","console","log","Header","Layout","PlusButton","type","iconSize","getNoteRef","noteId","getCurrentTime","toLocaleDateString","noteContextDefaultValues","addNote","note","Promise","resolve","updateNote","id","deleteNote","NoteContext","useNote","NoteProvider","delete","title","content","Math","floor","random","createdAt","noteRef","get","data","prevTitle","prevContent","newTitle","trim","newContent","lastEditedAt","updatedNote","update","CreateNote","contentRef","titleRef","submitNote","e","preventDefault","innerText","onSubmit","contentEditable","data-placeholder","Zoom","in","Options","anchorEl","setAnchorEl","closeMenu","currentTarget","Menu","getContentAnchorEl","open","Boolean","onClose","keepMounted","TransitionComponent","Fade","anchorOrigin","vertical","horizontal","MenuItem","UpdateNote","onSetNote","setCreatedAt","setLastEditedAt","addEventListener","target","handleUpdateNote","updatedTitle","updatedContent","Note","index","selectedNote","setSelectedNote","setNote","handleClose","handleSetNote","useCallback","style","transitionDelay","aria-label","wordWrap","color","Dialog","useFetchNotes","notes","setNotes","onSnapshot","snap","docs","map","Notes","length","App","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d4c4c517.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nexport const app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAlCeauan3Y4VcMNqMzpNv8dGMKdubBR4E\",\r\n    authDomain: \"noteskeepers.firebaseapp.com\",\r\n    projectId: \"noteskeepers\",\r\n    storageBucket: \"noteskeepers.appspot.com\",\r\n    messagingSenderId: \"349974173689\",\r\n    appId: \"1:349974173689:web:a2bb7b75a7d91b10174f28\",\r\n    measurementId: \"G-FNFGL8YH49\",\r\n});\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db, firebase };\r\n","export const convertDateToINS = (date: string) => {\r\n    return new Date(date).toLocaleString(\"en-IN\", {\r\n        timeZone: \"Asia/Kolkata\",\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n        second: \"numeric\",\r\n    });\r\n};\r\n","import { db, firebase } from \"../lib/firebase/config\";\r\nimport {\r\n    createContext,\r\n    ReactNode,\r\n    useContext,\r\n    useEffect,\r\n    useState,\r\n} from \"react\";\r\nimport { UserType } from \"../lib/interface\";\r\nimport { convertDateToINS } from \"../lib/helpers/context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import firebase from \"firebase\";\r\n\r\ninterface authContextType {\r\n    user: UserType | undefined;\r\n    login: () => void;\r\n    logout: () => void;\r\n    error: string | undefined;\r\n}\r\n\r\nconst authContextDefaultValues: authContextType = {\r\n    user: {\r\n        uid: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        imgURL: \"\",\r\n        isNewUser: true,\r\n        signInMethod: \"\",\r\n        createdTime: \"\",\r\n        lastSignInTime: \"\",\r\n    },\r\n    login: () => {},\r\n    logout: () => {},\r\n    error: \"\",\r\n};\r\n\r\nconst AuthContext = createContext<authContextType>(authContextDefaultValues);\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\ninterface Props {\r\n    children: ReactNode;\r\n}\r\n\r\nexport function AuthProvider({ children }: Props) {\r\n    const history = useHistory();\r\n    const [user, setUser] = useState<UserType>();\r\n    const [error, setError] = useState<string | undefined>();\r\n\r\n    // Methods/Functions\r\n    const login = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        try {\r\n            const result = await firebase.auth().signInWithPopup(provider);\r\n            const { user, additionalUserInfo } = result;\r\n\r\n            const userValues = {\r\n                uid: user?.uid!,\r\n                email: user?.email!,\r\n                name: user?.displayName!,\r\n                imgURL: user?.photoURL!,\r\n                isNewUser: additionalUserInfo?.isNewUser!,\r\n                signInMethod: user?.providerId!,\r\n                isAnonymous: user?.isAnonymous,\r\n                createdTime: convertDateToINS(user?.metadata?.creationTime!),\r\n                lastSignInTime: convertDateToINS(\r\n                    user?.metadata?.lastSignInTime!\r\n                ),\r\n            };\r\n\r\n            setUser(userValues);\r\n\r\n            try {\r\n                await db.collection(\"users\").doc(user?.uid).set(userValues);\r\n\r\n                history.push(`/keeper/${user?.displayName}`);\r\n            } catch (err) {\r\n                setError(err || \"Failed to save user data!\");\r\n            }\r\n        } catch (err) {\r\n            setError(err || \"Failed to login\");\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        await firebase.auth().signOut();\r\n\r\n        history.push(\"/\");\r\n    };\r\n\r\n    // Effects\r\n    // This useEffect will check for the already login user\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (!user?.email) {\r\n                return setUser(undefined);\r\n            }\r\n\r\n            setUser({\r\n                uid: user?.uid,\r\n                email: user?.email!,\r\n                name: user?.displayName!,\r\n                imgURL: user?.photoURL!,\r\n                isNewUser: false,\r\n                signInMethod: user?.providerId!,\r\n                isAnonymous: user?.isAnonymous,\r\n                createdTime: convertDateToINS(user?.metadata?.creationTime!),\r\n                lastSignInTime: convertDateToINS(\r\n                    user?.metadata?.lastSignInTime!\r\n                ),\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const value = {\r\n        user,\r\n        login,\r\n        logout,\r\n        error,\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AuthContext.Provider value={value}>\r\n                {children}\r\n            </AuthContext.Provider>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typed from \"typed.js\";\r\nimport { useAuth } from \"./context/AuthContext\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\n\r\ninterface Props {}\r\n\r\nconst Home = (props: Props) => {\r\n    // Refs\r\n    const el = useRef<HTMLSpanElement>(null);\r\n\r\n    // Context\r\n    const { user, login } = useAuth();\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        const typed = new Typed(el.current!, {\r\n            strings: [\"thoughts\", \"schedule\", \"secrets\", \"plans\", \"notes\"],\r\n            startDelay: 300,\r\n            typeSpeed: 100,\r\n            backSpeed: 100,\r\n            backDelay: 100,\r\n            smartBackspace: true,\r\n            loop: true,\r\n            showCursor: true,\r\n            cursorChar: \"!\",\r\n        });\r\n\r\n        return () => {\r\n            typed.destroy();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"container grid md:grid-cols-2 md:place-items-center fullHeight\">\r\n            <div className=\"place-self-center w-full\">\r\n                <h1 className=\"text-[3rem] lg:text-7xl xl:text-8xl w-full text-center\">\r\n                    <span className=\"inline-block md:mb-4\">Keep your</span>\r\n                    <div className=\"h-16\">\r\n                        <span\r\n                            ref={el}\r\n                            className=\"bg-gradient-to-b from-yellow-200 via-yellow-300 to-yellow-400 \r\n                                p-2 underline inline-block\"\r\n                        ></span>\r\n                    </div>\r\n                    <span className=\"inline-block mt-4 lg:mt-12\">\r\n                        in keeper\r\n                    </span>\r\n                </h1>\r\n            </div>\r\n            <div className=\"self-start place-self-center md:self-center\">\r\n                {user ? (\r\n                    <div\r\n                        className=\"px-3 py-2 rounded-md font-black text-xl shadow-md\r\n                            bg-gradient-to-b from-yellow-300 via-yellow-300 to-yellow-400\r\n                            hover:from-yellow-400 hover:to-yellow-300 \"\r\n                    >\r\n                        <Link to={`/keeper/${user.name}`}>\r\n                            <button>Go To Keep &#10230;</button>\r\n                        </Link>\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        className=\"rowCenter space-x-2 px-6 py-4 rounded-md bg-gray-400 cursor-pointer \r\n                            hover:text-gray-800\"\r\n                        onClick={login}\r\n                    >\r\n                        <FcGoogle size=\"2rem\" />\r\n                        <button className=\"font-medium text-xl\">\r\n                            continue with Google\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","interface Props {}\r\n\r\nconst Footer = (props: Props) => {\r\n    const currentDate = new Date();\r\n    const currentYear = currentDate.getFullYear();\r\n    console.log(currentYear);\r\n\r\n    return (\r\n        <></>\r\n        // <footer>\r\n        //     <p style={{ color: \"red\" }}>Copyright {currentYear}</p>\r\n        // </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import HighlightIcon from \"@material-ui/icons/Highlight\";\r\n\r\ninterface Props {}\r\n\r\nconst Header = (props: Props) => {\r\n    return (\r\n        <header>\r\n            <h1>\r\n                <HighlightIcon className=\"mb-2\" /> Keeper\r\n            </h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { Fragment, ReactNode } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\n\r\ninterface Props {\r\n    children: ReactNode;\r\n}\r\n\r\nconst Layout = ({ children }: Props) => {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <main>{children}</main>\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import { BiPlus } from \"react-icons/bi\";\r\n\r\ninterface PlusButtonProps {\r\n    className?: string;\r\n    type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n    iconSize?: string;\r\n}\r\n\r\nexport const PlusButton = ({ className, type, iconSize }: PlusButtonProps) => {\r\n    return (\r\n        <button type={type} className={className}>\r\n            {/* this only works if react-icons is install */}\r\n            <BiPlus size={iconSize} />{\" \"}\r\n        </button>\r\n    );\r\n};\r\n","import { db } from \"../firebase/config\";\r\n\r\nexport const getNotesRef = (uid: string) => {\r\n    return db.collection(\"users\").doc(uid).collection(\"notes\");\r\n};\r\n\r\nexport const getNoteRef = (uid: string, noteId: string) => {\r\n    return db.collection(\"users\").doc(uid).collection(\"notes\").doc(noteId);\r\n};\r\n\r\nexport const getCurrentTime = () => {\r\n    return `${new Date().toLocaleDateString(undefined, {\r\n        month: \"short\",\r\n        day: \"2-digit\",\r\n        year: \"numeric\",\r\n    })}`;\r\n};\r\n","import { createContext, ReactNode, useContext } from \"react\";\r\nimport { getCurrentTime, getNoteRef } from \"../lib/helpers/notes\";\r\nimport { OptionalNote, TitleNContent } from \"../lib/interface\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\ninterface noteContextType {\r\n    deleteNote: (id: string) => Promise<void>;\r\n    addNote: (note: TitleNContent) => Promise<void>;\r\n    updateNote: (note: OptionalNote, id: string) => Promise<void>;\r\n}\r\n\r\nconst noteContextDefaultValues: noteContextType = {\r\n    addNote: (note: TitleNContent) => new Promise((resolve) => resolve()),\r\n    updateNote: (note: OptionalNote, id: string) =>\r\n        new Promise((resolve) => resolve()),\r\n    deleteNote: (id: string) => new Promise((resolve) => resolve()),\r\n};\r\n\r\nconst NoteContext = createContext<noteContextType>(noteContextDefaultValues);\r\n\r\nexport function useNote() {\r\n    return useContext(NoteContext);\r\n}\r\n\r\ninterface Props {\r\n    children: ReactNode;\r\n}\r\n\r\nexport function NoteProvider({ children }: Props) {\r\n    const { user } = useAuth();\r\n\r\n    const deleteNote = async (id: string) => {\r\n        await getNoteRef(user?.uid!, id).delete();\r\n    };\r\n\r\n    const addNote = async (note: TitleNContent) => {\r\n        let { title, content } = note;\r\n\r\n        const id = title + Math.floor(Math.random() * 10000000);\r\n        const createdAt = getCurrentTime();\r\n        if (title === \"\") {\r\n            title = \"untitled\";\r\n        }\r\n\r\n        const noteRef = getNoteRef(user?.uid!, id);\r\n        await noteRef.set({ id, title, content, createdAt });\r\n    };\r\n\r\n    const updateNote = async (note: OptionalNote, id: string) => {\r\n        const noteRef = getNoteRef(user?.uid!, id);\r\n        const { title, content } = note;\r\n        const prevTitle = (await noteRef.get()).data()?.title;\r\n        const prevContent = (await noteRef.get()).data()?.content;\r\n\r\n        const newTitle = title?.trim() || prevTitle || \"Untitled\";\r\n        const newContent = content?.trim() || prevContent || \"Empty note...\";\r\n        const lastEditedAt = getCurrentTime();\r\n\r\n        const updatedNote = {\r\n            id,\r\n            title: newTitle,\r\n            content: newContent,\r\n            lastEditedAt,\r\n        };\r\n\r\n        await noteRef.update(updatedNote);\r\n    };\r\n\r\n    const value = {\r\n        addNote,\r\n        updateNote,\r\n        deleteNote,\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NoteContext.Provider value={value}>\r\n                {children}\r\n            </NoteContext.Provider>\r\n        </>\r\n    );\r\n}\r\n","import { FormEvent } from \"react\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport { useRef } from \"react\";\r\nimport { PlusButton } from \"../atoms/Buttons\";\r\nimport { useNote } from \"../../context/NoteContext\";\r\n\r\ninterface Props {}\r\n\r\nconst CreateNote = (props: Props) => {\r\n    // Context\r\n    const { addNote } = useNote();\r\n\r\n    // Refs\r\n    const contentRef = useRef<HTMLDivElement>(null);\r\n    const titleRef = useRef<HTMLDivElement>(null);\r\n\r\n    // Handlers\r\n    const submitNote = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        let title = titleRef?.current?.innerText.trim() || \"Untitled\";\r\n        let content = contentRef?.current?.innerText.trim() || \"Empty note...\";\r\n\r\n        await addNote({ title, content });\r\n\r\n        if (titleRef) {\r\n            if (titleRef.current) {\r\n                titleRef.current.innerText = \"\";\r\n            }\r\n        }\r\n\r\n        if (contentRef) {\r\n            if (contentRef.current) {\r\n                contentRef.current.innerText = \"\";\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form\r\n            onSubmit={submitNote}\r\n            className=\"relative bg-gray-200 container sm:max-w-lg p-4 mx-auto mt-8 mb-5 rounded-lg \r\n                shadow-2xl\"\r\n        >\r\n            <div\r\n                id=\"title\"\r\n                contentEditable={true}\r\n                ref={titleRef}\r\n                data-placeholder=\"Title\"\r\n                className=\"w-full p-1 outline-none text-xl font-medium bg-gray-200 editableTitle\"\r\n            />\r\n            <div\r\n                id=\"content\"\r\n                contentEditable={true}\r\n                ref={contentRef}\r\n                data-placeholder=\"Content...\"\r\n                className=\"w-full p-1 outline-none text-lg bg-gray-200 editableContent\"\r\n            />\r\n            <Zoom in={true}>\r\n                <PlusButton\r\n                    className=\"flexCenter absolute right-[18px] -bottom-[18px] border-none rounded-full \r\n                        w-9 h-9 outline-none text-white bg-yellow-400 hover:bg-yellow-500\r\n                        focus:bg-yellow-500 transitionIn\"\r\n                    iconSize=\"1.45rem\"\r\n                    type=\"submit\"\r\n                />\r\n            </Zoom>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreateNote;\r\n","import { useState, MouseEvent } from \"react\";\r\nimport { MdMoreVert } from \"react-icons/md\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { useNote } from \"../../context/NoteContext\";\r\n\r\ninterface Props {\r\n    id: string;\r\n}\r\n\r\nconst Options = ({ id }: Props) => {\r\n    // Context\r\n    const { deleteNote } = useNote();\r\n\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n    // Handlers / Functions\r\n    const openMenu = (e: MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(e.currentTarget);\r\n    };\r\n\r\n    const closeMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" onClick={openMenu}>\r\n                <MdMoreVert size=\"1.65rem\" />\r\n            </button>\r\n            <Menu\r\n                id=\"options\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                open={Boolean(anchorEl)}\r\n                onClose={closeMenu}\r\n                keepMounted\r\n                TransitionComponent={Fade}\r\n                anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                }}\r\n            >\r\n                <MenuItem\r\n                    onClick={() => {\r\n                        deleteNote(id);\r\n                        closeMenu();\r\n                    }}\r\n                >\r\n                    Delete note\r\n                </MenuItem>\r\n                <MenuItem onClick={closeMenu}>Add label</MenuItem>\r\n                <MenuItem onClick={closeMenu}>Make a copy</MenuItem>\r\n                <MenuItem onClick={closeMenu}>Add to secret</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Options;\r\n","import { FormEvent, useRef, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useNote } from \"../../context/NoteContext\";\r\nimport { getNoteRef } from \"../../lib/helpers/notes\";\r\nimport { OptionalNote } from \"../../lib/interface\";\r\nimport Options from \"./Options\";\r\n\r\ninterface Props {\r\n    id: string;\r\n    title: string;\r\n    content: string;\r\n    onSetNote: (note: OptionalNote) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst UpdateNote = (props: Props) => {\r\n    const { id, title, content, onSetNote, onClose } = props;\r\n    // Refs\r\n    const titleRef = useRef<HTMLDivElement>(null);\r\n    const contentRef = useRef<HTMLDivElement>(null);\r\n\r\n    // Content\r\n    const { user } = useAuth();\r\n    const { updateNote } = useNote();\r\n\r\n    // States\r\n    const [createdAt, setCreatedAt] = useState<string>(\"\");\r\n    const [lastEditedAt, setLastEditedAt] = useState<string>(\"\");\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        (async () => {\r\n            const noteRef = await getNoteRef(user?.uid!, id).get();\r\n            const createdAt = noteRef?.data()?.createdAt;\r\n            const lastEditedAt = noteRef?.data()?.lastEditedAt;\r\n            setCreatedAt(createdAt);\r\n            setLastEditedAt(lastEditedAt);\r\n        })();\r\n    }, [user, id]);\r\n\r\n    useEffect(() => {\r\n        // This effect set the default values to title and content\r\n        if (titleRef) {\r\n            if (titleRef.current) {\r\n                titleRef.current.innerText = title;\r\n            }\r\n        }\r\n        if (contentRef) {\r\n            if (contentRef.current) {\r\n                contentRef.current.innerText = content;\r\n            }\r\n        }\r\n    }, [title, content]);\r\n\r\n    useEffect(() => {\r\n        // This effect works as onChange and save the every change in onSetNote\r\n        titleRef?.current?.addEventListener(\"input\", (e) => {\r\n            // I logged the value and check that innerText exist but I don't know why TS not getting it.\r\n            // @ts-ignore\r\n            const title = e.target?.innerText;\r\n            onSetNote({ title });\r\n        });\r\n        contentRef?.current?.addEventListener(\"input\", (e) => {\r\n            // Same here as previous(title)\r\n            // @ts-ignore\r\n            const content = e.target?.innerText;\r\n            onSetNote({ content });\r\n        });\r\n    }, [onSetNote]);\r\n\r\n    // Handlers\r\n    const handleUpdateNote = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const updatedTitle = titleRef.current?.innerText || title || \"Untitled\";\r\n        const updatedContent =\r\n            contentRef.current?.innerText || content || \"Empty note...\";\r\n        await updateNote({ title: updatedTitle, content: updatedContent }, id);\r\n        // Closing Dialog.\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <form\r\n                onSubmit={handleUpdateNote}\r\n                className=\"p-4 bg-gray-200 min-w-[300px] xs:min-w-[400px] sm:min-w-[500px] rounded-lg\"\r\n            >\r\n                <div\r\n                    contentEditable={true}\r\n                    className=\"w-full p-1 outline-none text-xl font-medium\"\r\n                    ref={titleRef}\r\n                />\r\n                <div\r\n                    contentEditable={true}\r\n                    className=\"w-full p-1 outline-none text-lg\"\r\n                    ref={contentRef}\r\n                />\r\n                <div className=\"mt-8 py-3 flex flex-col space-y-2\">\r\n                    {lastEditedAt && (\r\n                        <div className=\"self-end\">\r\n                            <span>\r\n                                Edited{\" \"}\r\n                                <time className=\"font-medium text-black\">\r\n                                    {lastEditedAt}\r\n                                </time>\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"flex items-center space-x-4\">\r\n                        <div className=\"mr-auto rowCenter\">\r\n                            <span className=\"\">\r\n                                created{\" \"}\r\n                                <time className=\"font-medium text-black\">\r\n                                    {createdAt}\r\n                                </time>\r\n                            </span>\r\n                            <Options id={id} />\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"cursor-pointer font-medium text-xl\"\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default UpdateNote;\r\n","import { MdDelete } from \"react-icons/md\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport UpdateNote from \"./UpdateNote\";\r\nimport { OptionalNote } from \"../../lib/interface\";\r\nimport { useCallback } from \"react\";\r\nimport { useNote } from \"../../context/NoteContext\";\r\n\r\ninterface Props {\r\n    id: string;\r\n    index: number;\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\nconst Note = (props: Props) => {\r\n    const { id, index, title, content } = props;\r\n\r\n    // Context\r\n    const { deleteNote, updateNote } = useNote();\r\n\r\n    // States\r\n    const [selectedNote, setSelectedNote] = useState<string>(\"none\");\r\n    const [note, setNote] = useState<OptionalNote | null>(null);\r\n\r\n    // Handlers\r\n    const handleClose = async () => {\r\n        setSelectedNote(\"none\");\r\n        if (note) {\r\n            await updateNote(note, id);\r\n        }\r\n    };\r\n\r\n    const handleSetNote = useCallback((note: OptionalNote) => {\r\n        setNote(note);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Zoom in={true} style={{ transitionDelay: `${300 * index}ms` }}>\r\n                <li\r\n                    className={`p-3 w-60 m-4 rounded-lg bg-gray-300 shadow-lg \r\n                `}\r\n                    aria-label={id}\r\n                    onClick={() => setSelectedNote(id)}\r\n                >\r\n                    <h1 className=\"mb-4 text-xl font-medium\">{title}</h1>\r\n                    <p\r\n                        className=\"mb-3 whitespace-pre-wrap text-lg\"\r\n                        style={{ wordWrap: \"break-word\" }}\r\n                    >\r\n                        {content}\r\n                    </p>\r\n                    <button\r\n                        onClick={() => deleteNote(id)}\r\n                        className=\"relative float-right cursor-pointer hover:text-red-400\"\r\n                        title=\"Delete note\"\r\n                    >\r\n                        <MdDelete size=\"1.75rem\" color=\"#555\" />\r\n                    </button>\r\n                </li>\r\n            </Zoom>\r\n            <Dialog\r\n                onClose={handleClose}\r\n                open={id === selectedNote}\r\n                className=\"\"\r\n            >\r\n                <UpdateNote\r\n                    id={id}\r\n                    title={title}\r\n                    content={content}\r\n                    onSetNote={handleSetNote}\r\n                    onClose={handleClose}\r\n                />\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { getNotesRef } from \"../helpers/notes\";\r\nimport { NoteType } from \"../interface\";\r\n\r\nexport const useFetchNotes = () => {\r\n    const [notes, setNotes] = useState<Array<NoteType>>([]);\r\n    const { user } = useAuth();\r\n\r\n    useEffect(() => {\r\n        getNotesRef(user?.uid!).onSnapshot((snap) =>\r\n            setNotes(\r\n                snap.docs.map((doc) => ({\r\n                    id: doc.data().id,\r\n                    title: doc.data().title,\r\n                    content: doc.data().content,\r\n                    createdAt: doc.data().createdAt,\r\n                    lastEditedAt: doc.data().lastEditedAt || \"Original\",\r\n                }))\r\n            )\r\n        );\r\n    }, [user?.uid]);\r\n\r\n    return notes;\r\n};\r\n","import { useAuth } from \"../context/AuthContext\";\r\nimport CreateNote from \"../components/Notes/CreateNote\";\r\nimport Note from \"../components/Notes/Note\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport { useFetchNotes } from \"../lib/hooks/notes\";\r\n\r\ninterface Props {}\r\n\r\nconst Notes = (props: Props) => {\r\n    const { logout } = useAuth();\r\n    const notes = useFetchNotes();\r\n\r\n    return (\r\n        <section>\r\n            <div>\r\n                <CreateNote />\r\n                <ul className=\"flex justify-center flex-wrap items-start\">\r\n                    {notes.length < 1 && (\r\n                        <Zoom in={true}>\r\n                            <li className=\"font-medium text-2xl my-40 text-center px-2\">\r\n                                Welcome to keeper, anything in mind? Write it\r\n                                down\r\n                            </li>\r\n                        </Zoom>\r\n                    )}\r\n                    {notes.map((note, index) => (\r\n                        <Note\r\n                            key={index}\r\n                            id={note.id!}\r\n                            index={index}\r\n                            title={note.title}\r\n                            content={note.content}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n                <button onClick={logout}>logout</button>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Layout from \"./components/layout/Layout\";\nimport Notes from \"./keeper/Notes\";\nimport { AuthProvider } from \"./context/AuthContext\";\nimport { NoteProvider } from \"./context/NoteContext\";\n\nfunction App() {\n    return (\n        <Router>\n            <Layout>\n                <AuthProvider>\n                    <NoteProvider>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route\n                                exact\n                                path=\"/keeper/:userName\"\n                                component={Notes}\n                            />\n                            {/* Place a route at the bottom with path \"/\" under switch to catch 404 page */}\n                            <Route path=\"/\" render={() => <h1>404</h1>} />\n                        </Switch>\n                    </NoteProvider>\n                </AuthProvider>\n            </Layout>\n        </Router>\n    );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.css\";\nimport \"./styles/globals.scss\";\nimport \"./styles/utils.scss\";\nimport \"./styles/material-ui.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n    // <React.StrictMode>\n    <App />,\n    // </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}