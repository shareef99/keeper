{"version":3,"sources":["components/Notes/CreateNote.tsx","components/Notes/Note.tsx","notes.ts","helpers/context.ts","firebase/config.ts","context/AuthContext.tsx","Home.tsx","components/layout/Footer.tsx","components/layout/Header.tsx","components/layout/Layout.tsx","keeper/Notes.tsx","App.tsx","index.js"],"names":["CreateNote","onAddNote","useState","title","content","note","setNote","isExpanded","setIsExpanded","updateNote","e","target","name","value","prevNote","onSubmit","preventDefault","className","placeholder","onChange","rows","onClick","Zoom","in","Fab","type","style","position","right","bottom","backgroundColor","color","border","borderRadius","width","height","cursor","outline","Note","id","onDeleteNote","wordWrap","size","dummyNotes","convertDateToINS","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","date","Date","toLocaleString","timeZone","year","month","day","hour","minute","second","authContextDefaultValues","user","uid","email","imgURL","isNewUser","signInMethod","createdTime","lastSignInTime","login","logout","AuthContext","createContext","useAuth","useContext","AuthProvider","children","history","useHistory","setUser","a","provider","auth","GoogleAuthProvider","signInWithPopup","result","additionalUserInfo","displayName","photoURL","providerId","isAnonymous","metadata","creationTime","push","signOut","useEffect","onAuthStateChanged","undefined","Provider","Home","props","el","useRef","typed","Typed","current","strings","startDelay","typeSpeed","backSpeed","backDelay","smartBackspace","loop","showCursor","cursorChar","destroy","ref","to","Footer","currentYear","getFullYear","console","log","Header","Layout","Notes","notes","setNotes","deleteNote","prevNotes","filter","index","map","App","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"wSA8EeA,EApEI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAElB,EAAwBC,mBAAmB,CAAEC,MAAO,GAAIC,QAAS,KAAjE,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCJ,oBAAkB,GAAtD,mBAAOK,EAAP,KAAmBC,EAAnB,KAGMC,EAAa,SACfC,GAEA,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdP,GAAQ,SAACQ,GAAD,mBAAC,eAAmBA,GAApB,kBAA+BF,EAAOC,QASlD,OACI,uBACIE,SARW,SAACL,GAChBA,EAAEM,iBACFV,EAAQ,CAAEH,MAAO,GAAIC,QAAS,KAC9BH,EAAUI,IAMNY,UAAU,uGAFd,UAKKV,GACG,uBACIK,KAAK,QACLC,MAAOR,EAAKF,MACZe,YAAY,QACZC,SAAUV,EACVQ,UAAU,2EAIlB,0BACIL,KAAK,UACLC,MAAOR,EAAKD,QACZc,YAAY,iBACZE,KAAMb,EAAa,EAAI,EACvBc,QAAS,kBAAMb,GAAc,IAC7BW,SAAUV,EACVQ,UAAU,wEAEd,cAACK,EAAA,EAAD,CAAMC,GAAIhB,EAAV,SACI,cAACiB,EAAA,EAAD,CACIC,KAAK,SACLC,MAAO,CACHC,SAAU,WACVC,MAAO,OACPC,OAAQ,QACRC,gBAAiB,gBACjBC,MAAO,eACPC,OAAQ,OACRC,aAAc,MACdC,MAAO,OACPC,OAAQ,OACRC,OAAQ,UACRC,QAAS,QAbjB,SAgBI,cAAC,IAAD,Y,QCtCLC,EAxBF,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,GAAIpC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,QAASoC,EAA0B,EAA1BA,aAKhC,OACI,qBAAIvB,UAAU,iDAAd,UACI,oBAAIA,UAAU,2BAAd,SAA0Cd,IAC1C,mBACIc,UAAU,8CACVS,MAAO,CAAEe,SAAU,cAFvB,SAIKrC,IAEL,wBACIiB,QAda,WACrBmB,EAAaD,IAcLtB,UAAU,sCAFd,SAII,cAAC,IAAD,CAAUyB,KAAK,UAAUX,MAAM,eCJhCY,EAvBI,CACf,CACIxC,MAAO,aACPC,QACI,4GAER,CACID,MAAO,QACPC,QACI,oHAER,CACID,MAAO,SACPC,QACI,4EAER,CACID,MAAO,wBACPC,QACI,2I,iECnBCwC,G,YCIMC,IAASC,cAAc,CACtCC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGRR,IAASS,YDdY,SAACC,GAC7B,OAAO,IAAIC,KAAKD,GAAME,eAAe,QAAS,CAC1CC,SAAU,eACVC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,cEWVC,EAA4C,CAC9CC,KAAM,CACFC,IAAK,GACLC,MAAO,GACPxD,KAAM,GACNyD,OAAQ,GACRC,WAAW,EACXC,aAAc,GACdC,YAAa,GACbC,eAAgB,IAEpBC,MAAO,aACPC,OAAQ,cAGNC,EAAcC,wBAA+BZ,GAE5C,SAASa,IACZ,OAAOC,qBAAWH,GAOf,SAASI,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,SACrBC,EAAUC,cAChB,EAAwBjF,qBAAxB,mBAAOgE,EAAP,KAAakB,EAAb,KAGMV,EAAK,uCAAG,sCAAAW,EAAA,6DACJC,EAAW,IAAIzC,IAAS0C,KAAKC,mBADzB,SAGW3C,IAAS0C,OAAOE,gBAAgBH,GAH3C,OAGJI,EAHI,OAIFxB,EAA6BwB,EAA7BxB,KAAMyB,EAAuBD,EAAvBC,mBACdP,EAAQ,CACJjB,IAAG,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAMC,IACXC,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAME,MACbxD,KAAI,OAAEsD,QAAF,IAAEA,OAAF,EAAEA,EAAM0B,YACZvB,OAAM,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAM2B,SACdvB,UAAS,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAoBrB,UAC/BC,aAAY,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAM4B,WACpBC,YAAW,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAM6B,YACnBvB,YAAa5B,EAAgB,OAACsB,QAAD,IAACA,GAAD,UAACA,EAAM8B,gBAAP,aAAC,EAAgBC,cAC9CxB,eAAgB7B,EAAgB,OAACsB,QAAD,IAACA,GAAD,UAACA,EAAM8B,gBAAP,aAAC,EAAgBvB,kBAGrDS,EAAQgB,KAAR,yBAAwBhC,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAM0B,cAjBpB,2CAAH,qDAoBLjB,EAAM,uCAAG,sBAAAU,EAAA,sEACLxC,IAAS0C,OAAOY,UADX,OAGXjB,EAAQgB,KAAK,KAHF,2CAAH,qDAQZE,qBAAU,WACNvD,IAAS0C,OAAOc,oBAAmB,SAACnC,GAAU,IAAD,IACzC,KAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAME,OACP,OAAOgB,OAAQkB,GAGnBlB,EAAQ,CACJjB,IAAG,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAMC,IACXC,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAME,MACbxD,KAAI,OAAEsD,QAAF,IAAEA,OAAF,EAAEA,EAAM0B,YACZvB,OAAM,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAM2B,SACdvB,WAAW,EACXC,aAAY,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAM4B,WACpBC,YAAW,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAM6B,YACnBvB,YAAa5B,EAAgB,OAACsB,QAAD,IAACA,GAAD,UAACA,EAAM8B,gBAAP,aAAC,EAAgBC,cAC9CxB,eAAgB7B,EAAgB,OAC5BsB,QAD4B,IAC5BA,GAD4B,UAC5BA,EAAM8B,gBADsB,aAC5B,EAAgBvB,uBAI7B,IAEH,IAAM5D,EAAQ,CACVqD,OACAQ,QACAC,UAGJ,OACI,mCACI,cAACC,EAAY2B,SAAb,CAAsB1F,MAAOA,EAA7B,SACKoE,M,YCxBFuB,EA5EF,SAACC,GAEV,IAAMC,EAAKC,iBAAwB,MAGnC,EAAwB7B,IAAhBZ,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MAqBd,OAlBA0B,qBAAU,WACN,IAAMQ,EAAQ,IAAIC,IAAMH,EAAGI,QAAU,CACjCC,QAAS,CAAC,WAAY,WAAY,UAAW,QAAS,SACtDC,WAAY,IACZC,UAAW,IACXC,UAAW,IACXC,UAAW,IACXC,gBAAgB,EAChBC,MAAM,EACNC,YAAY,EACZC,WAAY,MAGhB,OAAO,WACHX,EAAMY,aAEX,IAGC,0BACIvG,UAAU,sDACVS,MAAO,CAAES,OAAQ,sBAFrB,UAII,qBAAKlB,UAAU,2BAAf,SACI,qBACIA,UAAU,qFADd,UAII,sBAAMA,UAAU,uBAAhB,uBACA,qBAAKA,UAAU,OAAf,SACI,sBACIwG,IAAKf,EACLzF,UAAU,kGAIlB,sBAAMA,UAAU,wBAAhB,4BAGR,qBAAKA,UAAU,8CAAf,SACKiD,EACG,qBACIjD,UAAU,iKADd,SAKI,cAAC,IAAD,CAAMyG,GAAE,kBAAaxD,EAAKtD,MAA1B,SACI,2DAIR,sBACIK,UAAU,+HAGVI,QAASqD,EAJb,UAMI,cAAC,IAAD,CAAUhC,KAAK,SACf,wBAAQzB,UAAU,sBAAlB,2CC3DT0G,EAbA,SAAClB,GACZ,IACMmB,GADc,IAAIpE,MACQqE,cAGhC,OAFAC,QAAQC,IAAIH,GAGR,8B,iBCMOI,EAVA,SAACvB,GACZ,OACI,iCACI,+BACI,cAAC,IAAD,CAAexF,UAAU,SAD7B,gBCWGgH,EAVA,SAAC,GAAyB,IAAvBhD,EAAsB,EAAtBA,SACd,OACI,eAAC,WAAD,WACI,cAAC,EAAD,IACA,+BAAOA,IACP,cAAC,EAAD,QCmCGiD,EAtCD,SAACzB,GAEX,MAAyB3B,IAAXH,GAAd,EAAQT,KAAR,EAAcS,QAGd,EAA0BzE,mBAA0ByC,GAApD,mBAAOwF,EAAP,KAAcC,EAAd,KAMMC,EAAa,SAAC9F,GAChB6F,GAAS,SAACE,GAAD,OACLA,EAAUC,QAAO,SAAClI,EAAMmI,GAAP,OAAiBA,IAAUjG,SAIpD,OACI,kCACI,gCACI,cAAC,EAAD,CAAYtC,UAbR,SAACI,GACb+H,GAAS,SAACE,GAAD,4BAAmBA,GAAnB,CAA8BjI,UAa/B,6BACK8H,EAAMM,KAAI,SAACpI,EAAMmI,GAAP,OACP,cAAC,EAAD,CAEIjG,GAAIiG,EACJrI,MAAOE,EAAKF,MACZC,QAASC,EAAKD,QACdoC,aAAc6F,GAJTG,QAQjB,wBAAQnH,QAASsD,EAAjB,0BCeD+D,MA9Cf,WAEI,MAA0BxI,mBAA0ByC,GAApD,mBAAOwF,EAAP,KAAcC,EAAd,KAMMC,EAAa,SAAC9F,GAChB6F,GAAS,SAACE,GAAD,OACLA,EAAUC,QAAO,SAAClI,EAAMmI,GAAP,OAAiBA,IAAUjG,SAIpD,OACI,cAAC,IAAD,UACI,cAAC,EAAD,UACI,cAACyC,EAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO2D,OAAK,EAACC,KAAK,IAAIC,UAAWrC,IACjC,cAAC,IAAD,CACImC,OAAK,EACLC,KAAK,oBACLC,UAAWX,IAGf,cAAC,IAAD,CAAOU,KAAK,IAAIE,OAAQ,kBAAM,wCAC9B,cAAC,EAAD,CAAY7I,UAvBhB,SAACI,GACb+H,GAAS,SAACE,GAAD,4BAAmBA,GAAnB,CAA8BjI,UAuBvB,6BACK8H,EAAMM,KAAI,SAACpI,EAAMmI,GAAP,OACP,cAAC,EAAD,CAEIjG,GAAIiG,EACJrI,MAAOE,EAAKF,MACZC,QAASC,EAAKD,QACdoC,aAAc6F,GAJTG,kBCnCzCO,IAASD,OACL,cAAC,IAAME,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.4a8e00dc.chunk.js","sourcesContent":["import { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport { NoteType } from \"../../interface\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\ninterface Props {\r\n    onAddNote: (note: NoteType) => void;\r\n}\r\n\r\nconst CreateNote = ({ onAddNote }: Props) => {\r\n    // States\r\n    const [note, setNote] = useState<NoteType>({ title: \"\", content: \"\" });\r\n    const [isExpanded, setIsExpanded] = useState<boolean>(false);\r\n\r\n    // Handlers\r\n    const updateNote = (\r\n        e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n    ) => {\r\n        const { name, value } = e.target;\r\n        setNote((prevNote) => ({ ...prevNote, [name]: value }));\r\n    };\r\n\r\n    const submitNote = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setNote({ title: \"\", content: \"\" });\r\n        onAddNote(note);\r\n    };\r\n\r\n    return (\r\n        <form\r\n            onSubmit={submitNote}\r\n            className=\"create-note relative bg-gray-200 container sm:max-w-lg p-4 mx-auto mt-8 mb-5\r\n                rounded-lg shadow-2xl\"\r\n        >\r\n            {isExpanded && (\r\n                <input\r\n                    name=\"title\"\r\n                    value={note.title}\r\n                    placeholder=\"Title\"\r\n                    onChange={updateNote}\r\n                    className=\"w-full border-none p-1 outline-none resize-none text-lg \r\n                        bg-gray-200\"\r\n                />\r\n            )}\r\n            <textarea\r\n                name=\"content\"\r\n                value={note.content}\r\n                placeholder=\"Take a note...\"\r\n                rows={isExpanded ? 3 : 1}\r\n                onClick={() => setIsExpanded(true)}\r\n                onChange={updateNote}\r\n                className=\"w-full border-none p-1 outline-none resize-none text-lg bg-gray-200\"\r\n            />\r\n            <Zoom in={isExpanded}>\r\n                <Fab\r\n                    type=\"submit\"\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: \"18px\",\r\n                        bottom: \"-18px\",\r\n                        backgroundColor: \"var(--yellow)\",\r\n                        color: \"var(--white)\",\r\n                        border: \"none\",\r\n                        borderRadius: \"50%\",\r\n                        width: \"36px\",\r\n                        height: \"36px\",\r\n                        cursor: \"pointer\",\r\n                        outline: \"none\",\r\n                    }}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Zoom>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreateNote;\r\n","import { MdDelete } from \"react-icons/md\";\r\n\r\ninterface Props {\r\n    id: number;\r\n    title: string;\r\n    content: string;\r\n    onDeleteNote: (id: number) => void;\r\n}\r\n\r\nconst Note = ({ id, title, content, onDeleteNote }: Props) => {\r\n    const handleDeleteNote = () => {\r\n        onDeleteNote(id);\r\n    };\r\n\r\n    return (\r\n        <li className=\"p-3 w-60 m-4 rounded-lg bg-gray-300 float-left\">\r\n            <h1 className=\"mb-4 text-xl font-medium\">{title}</h1>\r\n            <p\r\n                className=\"mb-3 whitespace-pre-wrap text-lg font-light\"\r\n                style={{ wordWrap: \"break-word\" }}\r\n            >\r\n                {content}\r\n            </p>\r\n            <button\r\n                onClick={handleDeleteNote}\r\n                className=\"relative float-right cursor-pointer\"\r\n            >\r\n                <MdDelete size=\"1.75rem\" color=\"#555\" />\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","const dummyNotes = [\r\n    {\r\n        title: \"Delegation\",\r\n        content:\r\n            \"Q. How many programmers does it take to change a light bulb? A. None – It’s a hardware problem\",\r\n    },\r\n    {\r\n        title: \"Loops\",\r\n        content:\r\n            \"How to keep a programmer in the shower forever. Show him the shampoo bottle instructions: Lather. Rinse. Repeat.\",\r\n    },\r\n    {\r\n        title: \"Arrays\",\r\n        content:\r\n            \"Q. Why did the programmer quit his job? A. Because he didn't get arrays.\",\r\n    },\r\n    {\r\n        title: \"Hardware vs. Software\",\r\n        content:\r\n            \"What's the difference between hardware and software? You can hit your hardware with a hammer, but you can only curse at your software.\",\r\n    },\r\n];\r\n\r\nexport default dummyNotes;\r\n","export const convertDateToINS = (date: string) => {\r\n    return new Date(date).toLocaleString(\"en-IN\", {\r\n        timeZone: \"Asia/Kolkata\",\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n        second: \"numeric\",\r\n    });\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nexport const app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAlCeauan3Y4VcMNqMzpNv8dGMKdubBR4E\",\r\n    authDomain: \"noteskeepers.firebaseapp.com\",\r\n    projectId: \"noteskeepers\",\r\n    storageBucket: \"noteskeepers.appspot.com\",\r\n    messagingSenderId: \"349974173689\",\r\n    appId: \"1:349974173689:web:a2bb7b75a7d91b10174f28\",\r\n    measurementId: \"G-FNFGL8YH49\",\r\n});\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db, firebase };\r\n","import { firebase } from \"../firebase/config\";\r\nimport {\r\n    createContext,\r\n    ReactNode,\r\n    useContext,\r\n    useEffect,\r\n    useState,\r\n} from \"react\";\r\nimport { UserType } from \"../interface\";\r\nimport { convertDateToINS } from \"../helpers/context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import firebase from \"firebase\";\r\n\r\ninterface authContextType {\r\n    user: UserType | undefined;\r\n    login: () => void;\r\n    logout: () => void;\r\n}\r\n\r\nconst authContextDefaultValues: authContextType = {\r\n    user: {\r\n        uid: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        imgURL: \"\",\r\n        isNewUser: true,\r\n        signInMethod: \"\",\r\n        createdTime: \"\",\r\n        lastSignInTime: \"\",\r\n    },\r\n    login: () => {},\r\n    logout: () => {},\r\n};\r\n\r\nconst AuthContext = createContext<authContextType>(authContextDefaultValues);\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\ninterface Props {\r\n    children: ReactNode;\r\n}\r\n\r\nexport function AuthProvider({ children }: Props) {\r\n    const history = useHistory();\r\n    const [user, setUser] = useState<UserType>();\r\n\r\n    // Methods/Functions\r\n    const login = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        const result = await firebase.auth().signInWithPopup(provider);\r\n        const { user, additionalUserInfo } = result;\r\n        setUser({\r\n            uid: user?.uid!,\r\n            email: user?.email!,\r\n            name: user?.displayName!,\r\n            imgURL: user?.photoURL!,\r\n            isNewUser: additionalUserInfo?.isNewUser!,\r\n            signInMethod: user?.providerId!,\r\n            isAnonymous: user?.isAnonymous,\r\n            createdTime: convertDateToINS(user?.metadata?.creationTime!),\r\n            lastSignInTime: convertDateToINS(user?.metadata?.lastSignInTime!),\r\n        });\r\n\r\n        history.push(`/keeper/${user?.displayName}`);\r\n    };\r\n\r\n    const logout = async () => {\r\n        await firebase.auth().signOut();\r\n\r\n        history.push(\"/\");\r\n    };\r\n\r\n    // Effects\r\n    // This useEffect will check for the already login user\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (!user?.email) {\r\n                return setUser(undefined);\r\n            }\r\n\r\n            setUser({\r\n                uid: user?.uid,\r\n                email: user?.email!,\r\n                name: user?.displayName!,\r\n                imgURL: user?.photoURL!,\r\n                isNewUser: false,\r\n                signInMethod: user?.providerId!,\r\n                isAnonymous: user?.isAnonymous,\r\n                createdTime: convertDateToINS(user?.metadata?.creationTime!),\r\n                lastSignInTime: convertDateToINS(\r\n                    user?.metadata?.lastSignInTime!\r\n                ),\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const value = {\r\n        user,\r\n        login,\r\n        logout,\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AuthContext.Provider value={value}>\r\n                {children}\r\n            </AuthContext.Provider>\r\n        </>\r\n    );\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typed from \"typed.js\";\r\nimport { useAuth } from \"./context/AuthContext\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\n\r\ninterface Props {}\r\n\r\nconst Home = (props: Props) => {\r\n    // Refs\r\n    const el = useRef<HTMLSpanElement>(null);\r\n\r\n    // Context\r\n    const { user, login } = useAuth();\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        const typed = new Typed(el.current!, {\r\n            strings: [\"thoughts\", \"schedule\", \"secrets\", \"plans\", \"notes\"],\r\n            startDelay: 300,\r\n            typeSpeed: 100,\r\n            backSpeed: 100,\r\n            backDelay: 100,\r\n            smartBackspace: true,\r\n            loop: true,\r\n            showCursor: true,\r\n            cursorChar: \"!\",\r\n        });\r\n\r\n        return () => {\r\n            typed.destroy();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <section\r\n            className=\"container grid md:grid-cols-2 md:place-items-center\"\r\n            style={{ height: \"calc(100vh - 5rem)\" }}\r\n        >\r\n            <div className=\"place-self-center w-full\">\r\n                <h1\r\n                    className=\"text-[2rem] xs:text-4xl sm:text-5xl lg:text-7xl xl:text-8xl w-full \r\n                        text-center \"\r\n                >\r\n                    <span className=\"inline-block md:mb-4\">Keep your</span>\r\n                    <div className=\"h-16\">\r\n                        <span\r\n                            ref={el}\r\n                            className=\"bg-gradient-to-b from-yellow-200 via-yellow-300 to-yellow-400 \r\n                                p-2 underline inline-block\"\r\n                        ></span>\r\n                    </div>\r\n                    <span className=\"inline-block md:mt-12\">in keeper</span>\r\n                </h1>\r\n            </div>\r\n            <div className=\"self-start place-self-center md:self-center\">\r\n                {user ? (\r\n                    <div\r\n                        className=\"px-3 py-2 rounded-md font-black text-xl shadow-md\r\n                            bg-gradient-to-b from-yellow-300 via-yellow-300 to-yellow-400\r\n                            hover:from-yellow-400 hover:to-yellow-300 \"\r\n                    >\r\n                        <Link to={`/keeper/${user.name}`}>\r\n                            <button>Go To Keep &#10230;</button>\r\n                        </Link>\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        className=\"border-4 border-gray-400 rowCenter space-x-2 px-4 py-2 rounded-md\r\n                            hover:bg-gray-400 cursor-pointer hover:text-gray-800 \r\n                            \"\r\n                        onClick={login}\r\n                    >\r\n                        <FcGoogle size=\"2rem\" />\r\n                        <button className=\"font-medium text-xl\">\r\n                            continue with Google\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","interface Props {}\r\n\r\nconst Footer = (props: Props) => {\r\n    const currentDate = new Date();\r\n    const currentYear = currentDate.getFullYear();\r\n    console.log(currentYear);\r\n\r\n    return (\r\n        <></>\r\n        // <footer>\r\n        //     <p style={{ color: \"red\" }}>Copyright {currentYear}</p>\r\n        // </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import HighlightIcon from \"@material-ui/icons/Highlight\";\r\n\r\ninterface Props {}\r\n\r\nconst Header = (props: Props) => {\r\n    return (\r\n        <header>\r\n            <h1>\r\n                <HighlightIcon className=\"mb-2\" /> Keeper\r\n            </h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { Fragment, ReactNode } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\n\r\ninterface Props {\r\n    children: ReactNode;\r\n}\r\n\r\nconst Layout = ({ children }: Props) => {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <main>{children}</main>\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import { useAuth } from \"../context/AuthContext\";\r\nimport CreateNote from \"../components/Notes/CreateNote\";\r\nimport { NoteType } from \"../interface\";\r\nimport { useState } from \"react\";\r\nimport dummyNotes from \"../notes\";\r\nimport Note from \"../components/Notes/Note\";\r\n// import { db } from \"../firebase/config\";\r\n\r\ninterface Props {}\r\n\r\nconst Notes = (props: Props) => {\r\n    // Context\r\n    const { user, logout } = useAuth();\r\n\r\n    // State\r\n    const [notes, setNotes] = useState<Array<NoteType>>(dummyNotes);\r\n\r\n    const addNote = (note: NoteType) => {\r\n        setNotes((prevNotes) => [...prevNotes, note]);\r\n    };\r\n\r\n    const deleteNote = (id: number) => {\r\n        setNotes((prevNotes) =>\r\n            prevNotes.filter((note, index) => index !== id)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <div>\r\n                <CreateNote onAddNote={addNote} />\r\n                <ul>\r\n                    {notes.map((note, index) => (\r\n                        <Note\r\n                            key={index}\r\n                            id={index}\r\n                            title={note.title}\r\n                            content={note.content}\r\n                            onDeleteNote={deleteNote}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n                <button onClick={logout}>logout</button>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import { useState } from \"react\";\nimport CreateNote from \"./components/Notes/CreateNote\";\nimport Note from \"./components/Notes/Note\";\nimport { NoteType } from \"./interface\";\nimport dummyNotes from \"./notes\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Layout from \"./components/layout/Layout\";\nimport Notes from \"./keeper/Notes\";\nimport { AuthProvider } from \"./context/AuthContext\";\n\nfunction App() {\n    // States\n    const [notes, setNotes] = useState<Array<NoteType>>(dummyNotes);\n\n    const addNote = (note: NoteType) => {\n        setNotes((prevNotes) => [...prevNotes, note]);\n    };\n\n    const deleteNote = (id: number) => {\n        setNotes((prevNotes) =>\n            prevNotes.filter((note, index) => index !== id)\n        );\n    };\n\n    return (\n        <Router>\n            <Layout>\n                <AuthProvider>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route\n                            exact\n                            path=\"/keeper/:userName\"\n                            component={Notes}\n                        />\n                        {/* Place a route at the bottom with path \"/\" under switch to catch 404 page */}\n                        <Route path=\"/\" render={() => <h1>404</h1>} />\n                        <CreateNote onAddNote={addNote} />\n                        <ul>\n                            {notes.map((note, index) => (\n                                <Note\n                                    key={index}\n                                    id={index}\n                                    title={note.title}\n                                    content={note.content}\n                                    onDeleteNote={deleteNote}\n                                />\n                            ))}\n                        </ul>\n                    </Switch>\n                </AuthProvider>\n            </Layout>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.css\";\nimport \"./styles/globals.scss\";\nimport \"./styles/utils.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}